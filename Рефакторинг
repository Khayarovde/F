using System;
using System.Drawing;
using System.Drawing.Drawing2D;


namespace RefactorMe
{
    class Risovatel
    {
        static float x, y;
        static Graphics Graphics;

        public static void Initialization ( Graphics newGraphics )
        {
            Graphics = newGraphics;
            Graphics.SmoothingMode = SmoothingMode.None;
            Graphics.Clear(Color.Black);
        }

        public static void set_position(float x0, float y0)
        {x = x0; y = y0;}

        public static void makeIt(Pen pen, double length, double angle)
        {
        var x1 = (float)(x + length * Math.Cos(angle));
        var y1 = (float)(y + length * Math.Sin(angle));
        Graphics.DrawLine(pen, x, y, x1, y1);
        x = x1;
        y = y1;
        }

        public static void Change(double length, double angle)
        {
            x = (float)(x + length * Math.Cos(angle)); 
            y = (float)(y + length * Math.Sin(angle));
        }
    }

    public class ImpossibleSquare
    {
        public static void Draw(int shirina, int visota, double ugolPovorota, Graphics grafika)
        {
            // ugolPovorota пока не используется, но будет использоваться в будущем
            Risovatel.Initialization(grafika);

            var sz = Math.Min(shirina, visota);

            var diagonal_length = Math.Sqrt(2) * (sz * 0.375f + sz * 0.04f) / 2;
            var x0 = (float)(diagonal_length * Math.Cos(Math.PI / 4 + Math.PI)) + shirina / 2f;
            var y0 = (float)(diagonal_length * Math.Sin(Math.PI / 4 + Math.PI)) + visota / 2f;

            Risovatel.set_position(x0, y0);

            Draw1(Math.PI/2);
            Draw1(0);
            Draw1(-Math.PI/2);
            Draw1(Math.PI);


            void Draw1(double angle)
            {
                Risovatel.makeIt(Pens.Yellow, sz * 0.375f, angle);
                Risovatel.makeIt(Pens.Yellow, sz * 0.04f * Math.Sqrt(2), angle + Math.PI / 4);
                Risovatel.makeIt(Pens.Yellow, sz * 0.375f, angle + Math.PI);
                Risovatel.makeIt(Pens.Yellow, sz * 0.375f - sz * 0.04f, angle + Math.PI / 2);

                Risovatel.Change(sz * 0.04f, angle + -Math.PI);
                Risovatel.Change(sz * 0.04f * Math.Sqrt(2), angle + 3 * Math.PI / 4);
            }

        }

    }
}
